
#ifndef CAMERAPARAMETERS_HPP
#define CAMERAPARAMETERS_HPP

#include <glm/vec2.hpp>
#include <sys/types.h>

class CameraParameters {

    public:

        /* Constructor.
           Parameters:
             * width: camera's image width.
             * height: camera's image height.
             * fovh: horizontal Field Of View.
             * fovv: vertical Field Of View.
             * z: distance from the camera to the plane Z = 0.
             * angle: angle between the camera and the plane Z = 0 (always
                 positive and always looking down).
        */
        CameraParameters(size_t width, size_t height, float fovh, float fovv,
            float z, float angle);

        /* Return the X coordinate in screen reference frame from the X
           coordinate in world reference frame.
           Parameters:
             * wx: X coordinate in world reference frame.
             * wy: Y coordinate in world reference frame.
        */
        int get_screen_x(float wx, float wy) const;

        /* Return the Y coordinate in screen reference frame from the Y
           coordinate in world reference frame.
           Parameters:
             * wy: Y coordinate in world reference frame.
        */
        int get_screen_y(float wy) const;

        /* Return a world point from a screen point.
           Parameters:
             * sx: screen x coordinate.
             * sy: screen y coordinate.
        */
        glm::vec2 get_world_point(int sx, int sy) const;

        /* Return the X coordinate in world reference frame from the X
           coordinate in screen reference frame. The y coordinate in world
           frame is also necessary for this transformation.
           Parameters:
             * sx: X coordinate in screen reference frame.
             * wy: Y coordinate in world reference frame.
        */
        float get_world_x(int sx, float wy) const;

        /* Return the Y coordinate in world reference frame from the Y
           coordinate in screen reference frame.
           Parameters:
             * sy: Y coordinate in screen reference frame.
        */
        float get_world_y(int sy) const;

        // Size of the frames generated by the camera
        size_t width;
        size_t height;

        // Field of View
        float fovh;
        float fovv;

        // Distance from the camera to the floor
        float z;

        // Angle of the camera with the plane Z = 0
        float angle;

        // Limits of camera angle
        static const float min_angle;
        static const float max_angle;

        // Limit of camera Z
        static const float min_z;

    private:

        // Constants to accelerate the coordinates transformations
        float k1, k2, k3, k4, k5;

};

#endif

